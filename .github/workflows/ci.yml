name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
    branches-ignore:
      - 'Terraform-kube'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Extract Version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Build Docker Image
        run: |
          docker build -t my-springboot-app:latest -t my-springboot-app:$VERSION .

      - name: Log in to Azure Container Registry
        if: success() && env.ACR_LOGIN_SERVER != '' && env.ACR_USERNAME != '' && env.ACR_PASSWORD != ''
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Push Docker Image to Azure ACR
        if: success() && env.ACR_LOGIN_SERVER != '' && env.ACR_USERNAME != '' && env.ACR_PASSWORD != ''
        run: |
          docker tag my-springboot-app:latest ${{ secrets.ACR_LOGIN_SERVER }}/my-springboot-app:latest
          docker tag my-springboot-app:$VERSION ${{ secrets.ACR_LOGIN_SERVER }}/my-springboot-app:$VERSION
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/my-springboot-app:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/my-springboot-app:$VERSION

  trigger-deployment:
    name: Trigger Deployment Pipeline
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger Deployment Pipeline
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "deployment.yml"
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: '{"environment": "dev"}'