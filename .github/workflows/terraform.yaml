name: Terraform Deployment

on:
  push:
    branches:
      - terraform-kube

  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform Action (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      environment:
        description: 'Choose Environment (dev/test/production)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - production

jobs:
  terraform-plan:
    name: Terraform Plan & Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Set Environment Variable
      run: echo "ENVIRONMENT=${{ github.event.inputs.environment || 'dev' }}" >> $GITHUB_ENV
    - name: Set Uppercase Environment Variable
      run: echo "ENVIRONMENT_UPPER=$(echo $ENVIRONMENT | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets[format('AZURE_CREDENTIALS_{0}', env.ENVIRONMENT)] }}

    - name: Terraform Init
      run: terraform init -backend-config=backend-${{ env.ENVIRONMENT }}.tfbackend

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
      run: terraform plan -var-file="b${{ env.ENVIRONMENT }}.tfvars" -var "storage_account_name=$STORAGE_ACCOUNT_NAME" -out=tfplan

    - name: Save Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: terraform/tfplan

  terraform-approval:
    name: Manual Approval
    needs: terraform-plan
    runs-on: ubuntu-latest
    steps:
    - name: Await Manual Approval
      uses: hmarr/auto-approve-action@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        allowed-actors: "highelf"
        comment: "Terraform plan is ready. Approve to apply changes."

  terraform-apply:
    name: Terraform Apply
    needs: terraform-approval
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'apply' || github.event_name == 'push'
    defaults:
      run:
        working-directory: terraform
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # - name: Azure Login
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets[format('AZURE_CREDENTIALS_{0}',  env.ENVIRONMENT_UPPER)] }}

    - name: Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
        path: terraform/

    - name: Terraform Init
      run: terraform init -backend-config=backend-${{ env.ENVIRONMENT }}.tfbackend
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}

    - name: Terraform Apply
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
      run: terraform apply -var-file="b${{ env.ENVIRONMENT }}.tfvars" -var "storage_account_name=$STORAGE_ACCOUNT_NAME" -auto-approve tfplan

  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    needs: terraform-approval
    defaults:
      run:
        working-directory: terraform
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets[format('AZURE_CREDENTIALS_{0}',  env.ENVIRONMENT_UPPER)] }}

    - name: Terraform Init
      run: terraform init -backend-config=backend-${{ env.ENVIRONMENT }}.tfbackend

    - name: Terraform Destroy
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
      run: terraform destroy -var-file="b${{ env.ENVIRONMENT }}.tfvars" -var "storage_account_name=$STORAGE_ACCOUNT_NAME" -auto-approve